<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java基础知识点总结</title>
      <link href="/2021/07/11/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
      <url>/2021/07/11/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文内容均来源于网络，如尚硅谷的免费视频课程、菜鸟教程和优质博客等；本文仅供学习交流使用。</p></blockquote><h2 id="初识Java"><a href="#初识Java" class="headerlink" title="初识Java"></a>初识Java</h2><p>Java发行版有多个后缀名，通常Java SE 开发桌面级应用；Java EE 开发web应用；Java ME运行在移动端；</p><p>Java的应用：企业级应用；Android平台开发；大数据平台开发；移动领域应用；</p><p>Java的特点：<br>一：面向对象。类，对象；封装，继承，多态； 二：健壮性；三：跨平台性，通过JVM虚拟机实现；</p><p>两个核心机制：虚拟机和垃圾回收机制；</p><p>JDK：Java开发工具包，其中包含了JRE。其中有编译工具javac.exe和打包工具jar.exe。<br>JRE：Java运行环境，包括虚拟机和Java程序所需核心类库等。想运行一个开发好的Java程序，只安装JRE即可。</p><p>JDK的目录：bin，基本程序；db，数据库；include，头文件；lib，jar包；src，常用的类库和源码；</p><p>程序员编写.java 源文件，用javac.exe编译为.class 字节码文件，再用Java.exe运行；</p><p>编译运行java源文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javac helloworld.java  (加后缀)</span><br><span class="line">java helloworld  （不加后缀）</span><br></pre></td></tr></table></figure><p>Java严格区分大小写，但是Windows路径不区分大小写；</p><p>注释分为单行注释、多行注释和文档注释；文档注释可被编译器编译，生成网页形式的说明文档；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"><span class="doctag">@author</span> 指定作者</span></span><br><span class="line"><span class="comment"><span class="doctag">@version</span> 指定源文件版本</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">javadoc -d myHello -author -version HelloJava.java</span><br></pre></td></tr></table></figure><p>一个源文件中可以写多个类，但最多只能有一个类声明为public，并且这个类得和.java文件同名。 编译时每个类单独生成一个class文件。</p><h2 id="不知道学了多少遍的基础知识"><a href="#不知道学了多少遍的基础知识" class="headerlink" title="不知道学了多少遍的基础知识"></a><del>不知道学了多少遍的</del>基础知识</h2><h4 id="变量相关"><a href="#变量相关" class="headerlink" title="变量相关"></a>变量相关</h4><p>Java中有关键字和保留字。保留字现在还不是关键字但以后可能会是。 自己起的变量名叫<strong>标识符</strong>，注意不能用数字开头；</p><p>命名规范：包名全小写；类名接口名所有单词首字母大写；变量和方法名第一个单词首字母小写，后面开始大写；常量名全大写，单词之间用_连接；变量必须定义在作用域（{}）中；</p><p>声明long型变量以l或者L结尾； char中只能有一个字符，可以是转义字符； Unicode底层字符，可以是如同’\u0123’的字符；保存文件的时候用ANSI编码时，cmd可以输出中文；</p><h4 id="类型之间的关系"><a href="#类型之间的关系" class="headerlink" title="类型之间的关系"></a>类型之间的关系</h4><p>byte、char、short同级，运算之后必须赋值给int类型的变量；强制类型转换时截断或者变成最小值；<br>byte b+1编译不通过，因为默认常数是int型，小数是double型；<br>string可以和boolean类型做运算，结果为后面连接一个true或者false；</p><p>进行赋值时，八进制用0开头，二进制0b开头，十六进制0x开头；</p><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><p>运算符分为算术、赋值、比较、逻辑、位运算、三元运算符； 取余运算的结果符号与被模数的符号相同。</p><p>自增1不会改变本身数据的类型（针对int，byte等类型）；Java支持连续赋值； +=不会改变变量本身的数据类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">short</span> s1 = <span class="number">10</span>;</span><br><span class="line">s1 += <span class="number">2</span>;  <span class="comment">// 可通过编译；</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n = <span class="number">10</span>;</span><br><span class="line">n += (n++) + (++n);  <span class="comment">// 32</span></span><br></pre></td></tr></table></figure><p>比较运算符结果都是Boolean型； instanceof()：检查是否是类的对象；</p><p>&amp;&amp; 短路与；|| 短路或；^ 逻辑异或。短路运算符按顺序运行，如果左侧的表达式已知其值是true或者false，则右侧的表达式不会进行计算； 逻辑运算符只能适用于布尔类型变量；</p><p>位运算：直接对整数的二进制进行运算。&gt;&gt;&gt; 无符号右移（不管被移动数字是正还是负，最高位都用0补齐）；~取反运算；</p><p>使用位运算符交换两个变量的值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num1 = num1 ^ num2;</span><br><span class="line">num2 = num1 ^ num2;</span><br><span class="line">num1 = num1 ^ num2;</span><br></pre></td></tr></table></figure><p>单目运算符、三元运算符、赋值运算符都是从右向左计算；这导致a?b:c?d:e 等价于 a?b:(c?d:e) 而不是 (a?b:c)?d:e</p><h4 id="Java程序在控制台进行交互"><a href="#Java程序在控制台进行交互" class="headerlink" title="Java程序在控制台进行交互"></a>Java程序在控制台进行交互</h4><p>从键盘获取不同类型变量：使用Scanner类；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> num = scan.nextInt();</span><br><span class="line">string: scan.next();</span><br><span class="line">scan.nextDouble();</span><br><span class="line">scan.nextBoolean();</span><br></pre></td></tr></table></figure><p>char型没有单独的输入方式，可以用读取字符串的方式读入，再从中取出某一位：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Math.sqrt(i);</span><br><span class="line"></span><br><span class="line">String s = readKeyBoard(i);  <span class="comment">// 从键盘读入一个长度i的字符串</span></span><br><span class="line">s.tpUpperCase();  <span class="comment">// 变成大写</span></span><br><span class="line">s.charAt(i);  <span class="comment">// 可以取出某个位置的字符</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">int</span>)(Math.random()*<span class="number">90</span>+<span class="number">10</span>);  <span class="comment">// random产生0到1的随机数</span></span><br></pre></td></tr></table></figure><p>switch后面的表达式类型可以是：byte，short，char，int，枚举类型，string</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] x，y[];  <span class="comment">// x是一维数组，y是二维数组；</span></span><br><span class="line"><span class="comment">// 此时x代表一个对象（Java和C不同）</span></span><br><span class="line">y[<span class="number">0</span>] = x; <span class="comment">// yes</span></span><br><span class="line"></span><br><span class="line">array2 = array1;  <span class="comment">// 即可完成数组的复制，注意这个时候array2和array1指向同一个位置，改array2，array1也会改变</span></span><br><span class="line"><span class="comment">// 正确的数组复制需要new一个数组，逐个赋值</span></span><br></pre></td></tr></table></figure><p>Java的string可以很长。</p><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>数组的元素可以是基本或者引用数据类型；数组长度定好之后不能修改！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//静态初始化</span></span><br><span class="line"><span class="keyword">int</span>[] ids;</span><br><span class="line">ids = <span class="keyword">new</span> in[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">ids = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"><span class="comment">//动态初始化</span></span><br><span class="line">String[] names = <span class="keyword">new</span> String[<span class="number">4</span>];</span><br></pre></td></tr></table></figure><p>数组元素是引用数据类型则默认值是null；</p><p>arrays工具类的使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">boolean equals(int[] a, int[] b);  //判断两个数组是否相等</span><br><span class="line">String toString(int[] a);  //输出数组信息</span><br><span class="line">void fill(int[] a, int val);  //指定值填充到数组中</span><br><span class="line">void sort(int[] a);  //排序</span><br><span class="line">int binarySearch(int[] a, int key);  //对排序后的数组进行二分法检索指定的值</span><br></pre></td></tr></table></figure><p>数组如果没有赋值会报空指针错误，null；</p><h4 id="新建变量的存储位置"><a href="#新建变量的存储位置" class="headerlink" title="新建变量的存储位置"></a>新建变量的存储位置</h4><p>栈中：存放局部变量；堆中：new出来的对象和数组；<br>string：常量池中；static类型的变量：保存在静态域中；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String[][] arr2 = new String[3][2];</span><br><span class="line">String[][] arr3 = new String[3][];</span><br></pre></td></tr></table></figure><p><del>持续更新ing</del></p>]]></content>
      
      
      <categories>
          
          <category> 软件与编程语言学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO和GitHub建站（一）</title>
      <link href="/2021/07/11/HEXO%E5%BB%BA%E7%AB%99%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2021/07/11/HEXO%E5%BB%BA%E7%AB%99%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>首先安装node.js，直接官网下载安装。接着安装git for windows，直接官网安装（访问官网及后续安装搞个梯子会方便很多）。安装之后用下述语句查看版本以确认安装成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git version</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>新建一个文件夹用于存放博客相关的环境和内容配置，例如”blog”。在该文件夹中右击，选择”Git bash here”。安装HEXO：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g #安装Hexo</span><br><span class="line">npm update hexo -g #升级，可不进行</span><br><span class="line">hexo init #初始化博客</span><br></pre></td></tr></table></figure><p>HEXO的常用指令如下（这些指令均要在上面创建的blog文件夹路径下运行）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; # 新建文章</span><br><span class="line">hexo g == hexo generate # 生成</span><br><span class="line">hexo s == hexo server # 启动服务预览（安装hexo之后直接就可以进行）</span><br><span class="line">hexo d == hexo deploy # 部署到GitHub（需要预先与GitHub进行连接）</span><br><span class="line"># 上面的几条语句，使用的时候输入&quot;==&quot;前面的部分就可以了。</span><br><span class="line"></span><br><span class="line">hexo server # Hexo会监视文件变动并自动更新，无须重启服务器</span><br><span class="line">hexo server -s # 静态模式</span><br><span class="line">hexo server -p 5000 # 更改端口</span><br><span class="line">hexo server -i 192.168.1.1 # 自定义 IP</span><br><span class="line">hexo clean # 清除缓存，若是网页正常情况下可以忽略这条命令</span><br></pre></td></tr></table></figure><p>这样就可以在本地预览网站效果。为了能在其他设备上访问自己的网站，我选择GitHub托管自己的数据。</p><p>具体的操作是在GitHub上建立仓库，然后配置权限让自己可以把blog的内容直接部署到GitHub上。上传成功之后就可以用仓库的名称来访问博客，如我的是”shymuel.github.io”。但github的后缀容易被墙，我的解决方法是自己购买一个域名。国内域名需要实名审核但比较保险，大家可以自行选择合适的域名商。</p><h3 id="Volantis主题使用"><a href="#Volantis主题使用" class="headerlink" title="Volantis主题使用"></a>Volantis主题使用</h3><p>HEXO使用量最大的主题大概就是<a href="http://theme-next.iissnan.com/getting-started.html">NexT</a>了，它的功能十分强大，看起来也比较简洁。</p><p>我为了看起来更加的二次元而选择了<a href="https://volantis.js.org/v5/getting-started/">Volantis</a>主题，主要是为了使用它的定时换背景功能（因为我有太多壁纸想放上去了）。图片目前我还是放在本地，采用相对路径。后面抽空研究一下如何使用CDN实现图片读取。</p><p>Volantis自带文章目录功能，可根据md文件中的标题在网页一侧生成目录。</p><p>配置背景图、头像之类的需要在blog文件夹下新建名为”_config.volantis.yml”的文件进行配置。建议按照<a href="https://volantis.js.org/v5/theme-settings/">主题文档</a>进行。</p><p>对于字数统计和阅读时长显示，先要安装wordcount插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount </span><br></pre></td></tr></table></figure><p>之后可以通过主题配置文件里的 word_count 关键字来选择是否开启此功能，默认false。在配置文件的enable后面加上true。</p><h3 id="Twikoo评论插件"><a href="#Twikoo评论插件" class="headerlink" title="Twikoo评论插件"></a>Twikoo评论插件</h3><p>根据<a href="https://twikoo.js.org/quick-start.html">官方文档</a>进行配置。我选择的是Vercel部署方式。原开发者做了非常非常详细的<a href="https://www.bilibili.com/video/BV1Fh411e7ZH">视频教程</a>。我把_config.volantis.yml中关于评论的设置改成了如下的样子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">twikoo:</span><br><span class="line">    js: https://cdn.jsdelivr.net/npm/twikoo@latest # 建议锁定版本</span><br><span class="line">    path: # 全局评论地址</span><br><span class="line">    # 其他配置项按照yml格式继续填写即可 除了 [el path] 选项</span><br><span class="line">    envId: https://twikoo-dusky.vercel.app/ # vercel id</span><br><span class="line">    appId: # your appId</span><br><span class="line">    appKey: # your appKey</span><br><span class="line">    meta: [nick,mail,link] # valine comment header info</span><br><span class="line">    requiredFields: [nick,mail]</span><br><span class="line">    enableQQ: true # Unstable avatar link</span><br><span class="line">    recordIP: false # Record commenter IP</span><br><span class="line">    avatar: img/avatar.jpg # gravatar style https://valine.js.org/avatar</span><br><span class="line">    pageSize: 10 # comment list page size</span><br><span class="line">    lang: zh-cn</span><br><span class="line">    highlight: true</span><br><span class="line">    mathJax: false</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>部署之后还可以根据自己的需求，下载密钥设置管理员密码来对评论系统进行管理和定制。</p><h3 id="暗黑模式"><a href="#暗黑模式" class="headerlink" title="暗黑模式"></a>暗黑模式</h3><p>按照_config.volantis.yml中的描述，修改navbar目录，在menu子目录中添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- name: 暗黑模式 # 可自定义</span><br><span class="line">      icon: fas fa-moon # 可自定义</span><br><span class="line">      toggle: darkmode</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 软件与编程语言学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 个人网站 </tag>
            
            <tag> 软件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新的开始</title>
      <link href="/2021/06/26/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/"/>
      <url>/2021/06/26/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/</url>
      
        <content type="html"><![CDATA[<p>最后还是回来写代码了……感觉传统工科的老师都在搞机器学习，那我也没有办法，只能重新回来刷题。</p><p>这个博客上的内容可能会写的支离破碎一些，毕竟现在都在做各种项目，也不可能把全部的代码放上来，大概只是记录一下自己能做到什么功能吧，核心代码也会放一些。</p>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
