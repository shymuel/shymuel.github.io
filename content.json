{"meta":{"title":"Shymuel's Blog","subtitle":"","description":"Learn and Play","author":"Shymuel","url":"https://shymuel.github.io","root":"/"},"pages":[{"title":"","date":"2021-06-26T12:07:05.746Z","updated":"2021-06-26T12:07:05.746Z","comments":true,"path":"404.html","permalink":"https://shymuel.github.io/404.html","excerpt":"","text":""},{"title":"","date":"2021-06-26T12:04:55.000Z","updated":"2021-06-27T03:19:41.839Z","comments":true,"path":"about/index.html","permalink":"https://shymuel.github.io/about/index.html","excerpt":"","text":"只是一时兴起罢了。 E-mail: &#115;&#x68;&#x79;&#109;&#x75;&#101;&#x6c;&#49;&#57;&#x39;&#56;&#x40;&#49;&#54;&#51;&#46;&#x63;&#111;&#109; Brief：C++/Java，太弱小了，没有力量。 2021.06.26 如果不提高业务能力的话，就不得不昧着良心去做事情了。所以为了让自己心里好受一些，也要努力学习和进步。"},{"title":"img","date":"2021-06-26T12:06:11.000Z","updated":"2021-06-26T12:06:11.827Z","comments":true,"path":"img/index.html","permalink":"https://shymuel.github.io/img/index.html","excerpt":"","text":""},{"title":"friends","date":"2021-06-27T03:19:59.000Z","updated":"2021-07-04T09:08:00.921Z","comments":true,"path":"friends/index.html","permalink":"https://shymuel.github.io/friends/index.html","excerpt":"","text":"梦开始的地方"},{"title":"所有分类","date":"2021-06-27T03:16:47.000Z","updated":"2021-06-27T03:18:22.843Z","comments":true,"path":"categories/index.html","permalink":"https://shymuel.github.io/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2021-06-27T03:17:56.653Z","updated":"2021-06-27T03:17:56.653Z","comments":true,"path":"tags/index.html","permalink":"https://shymuel.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Java基础知识点总结","slug":"Java基础知识点总结","date":"2021-07-11T07:19:34.000Z","updated":"2021-07-11T08:57:45.132Z","comments":true,"path":"2021/07/11/Java基础知识点总结/","link":"","permalink":"https://shymuel.github.io/2021/07/11/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/","excerpt":"","text":"本文内容均来源于网络，如尚硅谷的免费视频课程、菜鸟教程和优质博客等；本文仅供学习交流使用。 初识JavaJava发行版有多个后缀名，通常Java SE 开发桌面级应用；Java EE 开发web应用；Java ME运行在移动端； Java的应用：企业级应用；Android平台开发；大数据平台开发；移动领域应用； Java的特点：一：面向对象。类，对象；封装，继承，多态； 二：健壮性；三：跨平台性，通过JVM虚拟机实现； 两个核心机制：虚拟机和垃圾回收机制； JDK：Java开发工具包，其中包含了JRE。其中有编译工具javac.exe和打包工具jar.exe。JRE：Java运行环境，包括虚拟机和Java程序所需核心类库等。想运行一个开发好的Java程序，只安装JRE即可。 JDK的目录：bin，基本程序；db，数据库；include，头文件；lib，jar包；src，常用的类库和源码； 程序员编写.java 源文件，用javac.exe编译为.class 字节码文件，再用Java.exe运行； 编译运行java源文件： 12javac helloworld.java (加后缀)java helloworld （不加后缀） Java严格区分大小写，但是Windows路径不区分大小写； 注释分为单行注释、多行注释和文档注释；文档注释可被编译器编译，生成网页形式的说明文档； 12345/**@author 指定作者@version 指定源文件版本*/javadoc -d myHello -author -version HelloJava.java 一个源文件中可以写多个类，但最多只能有一个类声明为public，并且这个类得和.java文件同名。 编译时每个类单独生成一个class文件。 不知道学了多少遍的基础知识变量相关Java中有关键字和保留字。保留字现在还不是关键字但以后可能会是。 自己起的变量名叫标识符，注意不能用数字开头； 命名规范：包名全小写；类名接口名所有单词首字母大写；变量和方法名第一个单词首字母小写，后面开始大写；常量名全大写，单词之间用_连接；变量必须定义在作用域（{}）中； 声明long型变量以l或者L结尾； char中只能有一个字符，可以是转义字符； Unicode底层字符，可以是如同’\\u0123’的字符；保存文件的时候用ANSI编码时，cmd可以输出中文； 类型之间的关系byte、char、short同级，运算之后必须赋值给int类型的变量；强制类型转换时截断或者变成最小值；byte b+1编译不通过，因为默认常数是int型，小数是double型；string可以和boolean类型做运算，结果为后面连接一个true或者false； 进行赋值时，八进制用0开头，二进制0b开头，十六进制0x开头； 运算符运算符分为算术、赋值、比较、逻辑、位运算、三元运算符； 取余运算的结果符号与被模数的符号相同。 自增1不会改变本身数据的类型（针对int，byte等类型）；Java支持连续赋值； +=不会改变变量本身的数据类型。 12345short s1 = 10;s1 += 2; // 可通过编译；int n = 10;n += (n++) + (++n); // 32 比较运算符结果都是Boolean型； instanceof()：检查是否是类的对象； &amp;&amp; 短路与；|| 短路或；^ 逻辑异或。短路运算符按顺序运行，如果左侧的表达式已知其值是true或者false，则右侧的表达式不会进行计算； 逻辑运算符只能适用于布尔类型变量； 位运算：直接对整数的二进制进行运算。&gt;&gt;&gt; 无符号右移（不管被移动数字是正还是负，最高位都用0补齐）；~取反运算； 使用位运算符交换两个变量的值： 123num1 = num1 ^ num2;num2 = num1 ^ num2;num1 = num1 ^ num2; 单目运算符、三元运算符、赋值运算符都是从右向左计算；这导致a?b:c?d:e 等价于 a?b:(c?d:e) 而不是 (a?b:c)?d:e Java程序在控制台进行交互从键盘获取不同类型变量：使用Scanner类； 1234567import java.util.Scanner;Scanner scan = new Scanner(System.in);int num = scan.nextInt();string: scan.next();scan.nextDouble();scan.nextBoolean(); char型没有单独的输入方式，可以用读取字符串的方式读入，再从中取出某一位： 1234567Math.sqrt(i);String s = readKeyBoard(i); // 从键盘读入一个长度i的字符串s.tpUpperCase(); // 变成大写s.charAt(i); // 可以取出某个位置的字符(int)(Math.random()*90+10); // random产生0到1的随机数 switch后面的表达式类型可以是：byte，short，char，int，枚举类型，string 123456int[] x，y[]; // x是一维数组，y是二维数组；// 此时x代表一个对象（Java和C不同）y[0] = x; // yesarray2 = array1; // 即可完成数组的复制，注意这个时候array2和array1指向同一个位置，改array2，array1也会改变// 正确的数组复制需要new一个数组，逐个赋值 Java的string可以很长。 数组数组的元素可以是基本或者引用数据类型；数组长度定好之后不能修改！ 123456//静态初始化int[] ids;ids = new in[]&#123;1,2,3&#125;;ids = &#123;1,2,3&#125;;//动态初始化String[] names = new String[4]; 数组元素是引用数据类型则默认值是null； arrays工具类的使用： 12345boolean equals(int[] a, int[] b); //判断两个数组是否相等String toString(int[] a); //输出数组信息void fill(int[] a, int val); //指定值填充到数组中void sort(int[] a); //排序int binarySearch(int[] a, int key); //对排序后的数组进行二分法检索指定的值 数组如果没有赋值会报空指针错误，null； 新建变量的存储位置栈中：存放局部变量；堆中：new出来的对象和数组；string：常量池中；static类型的变量：保存在静态域中； 12String[][] arr2 = new String[3][2];String[][] arr3 = new String[3][]; 持续更新ing","categories":[{"name":"软件与编程语言学习","slug":"软件与编程语言学习","permalink":"https://shymuel.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://shymuel.github.io/tags/Java/"},{"name":"编程语言","slug":"编程语言","permalink":"https://shymuel.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"}]},{"title":"HEXO和GitHub建站（一）","slug":"HEXO建站（一）","date":"2021-07-11T04:56:11.000Z","updated":"2021-07-18T10:52:25.811Z","comments":true,"path":"2021/07/11/HEXO建站（一）/","link":"","permalink":"https://shymuel.github.io/2021/07/11/HEXO%E5%BB%BA%E7%AB%99%EF%BC%88%E4%B8%80%EF%BC%89/","excerpt":"","text":"环境搭建首先安装node.js，直接官网下载安装。接着安装git for windows，直接官网安装（访问官网及后续安装搞个梯子会方便很多）。安装之后用下述语句查看版本以确认安装成功。 123git versionnode -vnpm -v 新建一个文件夹用于存放博客相关的环境和内容配置，例如”blog”。在该文件夹中右击，选择”Git bash here”。安装HEXO： 123npm install hexo -g #安装Hexonpm update hexo -g #升级，可不进行hexo init #初始化博客 HEXO的常用指令如下（这些指令均要在上面创建的blog文件夹路径下运行）： 1234567891011hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; # 新建文章hexo g == hexo generate # 生成hexo s == hexo server # 启动服务预览（安装hexo之后直接就可以进行）hexo d == hexo deploy # 部署到GitHub（需要预先与GitHub进行连接）# 上面的几条语句，使用的时候输入&quot;==&quot;前面的部分就可以了。hexo server # Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s # 静态模式hexo server -p 5000 # 更改端口hexo server -i 192.168.1.1 # 自定义 IPhexo clean # 清除缓存，若是网页正常情况下可以忽略这条命令 这样就可以在本地预览网站效果。为了能在其他设备上访问自己的网站，我选择GitHub托管自己的数据。 具体的操作是在GitHub上建立仓库，然后配置权限让自己可以把blog的内容直接部署到GitHub上。上传成功之后就可以用仓库的名称来访问博客，如我的是”shymuel.github.io”。但github的后缀容易被墙，我的解决方法是自己购买一个域名。国内域名需要实名审核但比较保险，大家可以自行选择合适的域名商。 Volantis主题使用HEXO使用量最大的主题大概就是NexT了，它的功能十分强大，看起来也比较简洁。 我为了看起来更加的二次元而选择了Volantis主题，主要是为了使用它的定时换背景功能（因为我有太多壁纸想放上去了）。图片目前我还是放在本地，采用相对路径。后面抽空研究一下如何使用CDN实现图片读取。 Volantis自带文章目录功能，可根据md文件中的标题在网页一侧生成目录。 配置背景图、头像之类的需要在blog文件夹下新建名为”_config.volantis.yml”的文件进行配置。建议按照主题文档进行。 对于字数统计和阅读时长显示，先要安装wordcount插件： 1npm i --save hexo-wordcount 之后可以通过主题配置文件里的 word_count 关键字来选择是否开启此功能，默认false。在配置文件的enable后面加上true。 Twikoo评论插件根据官方文档进行配置。我选择的是Vercel部署方式。原开发者做了非常非常详细的视频教程 mongodb+srv://Twikoo:&#x78;&#x69;&#x61;&#111;&#x74;&#x69;&#x61;&#x6e;&#49;&#x32;&#51;&#64;&#x63;&#x6c;&#x75;&#115;&#x74;&#101;&#114;&#48;&#46;&#99;&#110;&#51;&#102;&#x71;&#x2e;&#109;&#x6f;&#110;&#x67;&#111;&#x64;&#98;&#46;&#x6e;&#101;&#116;/myFirstDatabase?retryWrites=true&amp;w=majority","categories":[{"name":"软件与编程语言学习","slug":"软件与编程语言学习","permalink":"https://shymuel.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"HEXO","slug":"HEXO","permalink":"https://shymuel.github.io/tags/HEXO/"},{"name":"个人网站","slug":"个人网站","permalink":"https://shymuel.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"},{"name":"软件使用","slug":"软件使用","permalink":"https://shymuel.github.io/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"}]},{"title":"新的开始","slug":"新的开始","date":"2021-06-26T12:44:43.000Z","updated":"2021-07-11T04:53:16.771Z","comments":true,"path":"2021/06/26/新的开始/","link":"","permalink":"https://shymuel.github.io/2021/06/26/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/","excerpt":"","text":"最后还是回来写代码了……感觉传统工科的老师都在搞机器学习，那我也没有办法，只能重新回来刷题。 这个博客上的内容可能会写的支离破碎一些，毕竟现在都在做各种项目，也不可能把全部的代码放上来，大概只是记录一下自己能做到什么功能吧，核心代码也会放一些。","categories":[{"name":"日志","slug":"日志","permalink":"https://shymuel.github.io/categories/%E6%97%A5%E5%BF%97/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://shymuel.github.io/tags/%E9%9A%8F%E7%AC%94/"}]}],"categories":[{"name":"软件与编程语言学习","slug":"软件与编程语言学习","permalink":"https://shymuel.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"},{"name":"日志","slug":"日志","permalink":"https://shymuel.github.io/categories/%E6%97%A5%E5%BF%97/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://shymuel.github.io/tags/Java/"},{"name":"编程语言","slug":"编程语言","permalink":"https://shymuel.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"},{"name":"HEXO","slug":"HEXO","permalink":"https://shymuel.github.io/tags/HEXO/"},{"name":"个人网站","slug":"个人网站","permalink":"https://shymuel.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"},{"name":"软件使用","slug":"软件使用","permalink":"https://shymuel.github.io/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"},{"name":"随笔","slug":"随笔","permalink":"https://shymuel.github.io/tags/%E9%9A%8F%E7%AC%94/"}]}