{"meta":{"title":"Shymuel's Blog","subtitle":"","description":"Learn and Play","author":"Shymuel","url":"https://shymuel.top","root":"/"},"pages":[{"title":"","date":"2021-08-29T08:30:13.980Z","updated":"2021-06-26T12:07:06.000Z","comments":true,"path":"404.html","permalink":"https://shymuel.top/404.html","excerpt":"","text":""},{"title":"","date":"2021-06-26T12:04:55.000Z","updated":"2021-06-27T03:19:42.000Z","comments":true,"path":"about/index.html","permalink":"https://shymuel.top/about/index.html","excerpt":"","text":"只是一时兴起罢了。 E-mail: shymuel1998@163.com Brief：C++/Java，太弱小了，没有力量。 2021.06.26 如果不提高业务能力的话，就不得不昧着良心去做事情了。所以为了让自己心里好受一些，也要努力学习和进步。"},{"title":"friends","date":"2021-06-27T03:19:59.000Z","updated":"2021-08-17T04:05:46.000Z","comments":true,"path":"friends/index.html","permalink":"https://shymuel.top/friends/index.html","excerpt":"目前只有一个友链的shymuel是屑。","text":"目前只有一个友链的shymuel是屑。 不会有人从这个渠道申请吧？不会吧不会吧？"},{"title":"img","date":"2021-06-26T12:06:11.000Z","updated":"2021-06-26T12:06:12.000Z","comments":true,"path":"img/index.html","permalink":"https://shymuel.top/img/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2021-06-27T03:16:47.000Z","updated":"2021-06-27T03:18:24.000Z","comments":true,"path":"categories/index.html","permalink":"https://shymuel.top/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2021-08-29T09:19:25.116Z","updated":"2021-08-29T09:19:25.116Z","comments":true,"path":"tags/index.html","permalink":"https://shymuel.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Latex语法记录","slug":"Latex语法记录","date":"2021-12-15T02:30:35.000Z","updated":"2021-12-15T02:35:14.825Z","comments":true,"path":"2021361885.html","link":"","permalink":"https://shymuel.top/2021361885.html","excerpt":"","text":"Overleaf的LaTex教程 给字母加奇怪的东西 \\pmb{}，字母加粗 Text1\\pmb&#123;x&#125;, \\ \\pmb&#123;X&#125; \\(\\pmb{x}, \\ \\pmb{X}\\) \\hat{}，头顶加小尖角 Text1\\hat&#123;\\gamma&#125;_&#123;j k&#125;=\\frac&#123;\\alpha_&#123;k&#125; \\phi\\left(y_&#123;j&#125; \\mid \\theta_&#123;k&#125;\\right)&#125;&#123;\\sum_&#123;k=1&#125;^&#123;R&#125; \\alpha_&#123;k&#125; \\phi\\left(y_&#123;j&#125; \\mid \\theta_&#123;k&#125;\\right)&#125; \\(\\hat{\\gamma}_{j k}=\\frac{\\alpha_{k} \\phi\\left(y_{j} \\mid \\theta_{k}\\right)}{\\sum_{k=1}^{R} \\alpha_{k} \\phi\\left(y_{j} \\mid \\theta_{k}\\right)}\\) 各种括号和方框 \\begin{cases}，多种情况的表示 Text1\\gamma_&#123;j k&#125;= \\begin&#123;cases&#125;1, &amp; \\text &#123; 第 &#125; j \\text &#123; 个观测来自第 &#125; k \\text &#123; 个分模型 &#125; \\\\ 0, &amp; \\text &#123; 否则 &#125;\\end&#123;cases&#125; \\(\\gamma_{j k}= \\begin{cases}1, &amp; \\text { 第 } j \\text { 个观测来自第 } k \\text { 个分模型 } \\\\ 0, &amp; \\text { 否则 }\\end{cases}\\) \\begin{array}，方程组 Text1\\left\\&#123;\\begin&#123;array&#125;&#123;l&#125;\\mathrm&#123;e&#125;^&#123;-x_&#123;1&#125;&#125;+\\mathrm&#123;e&#125;^&#123;-2 x_&#123;2&#125;&#125;+x_&#123;3&#125;-2 x_&#123;4&#125;+t_&#123;k&#125; x_&#123;5&#125;-5.3=0 \\\\ \\mathrm&#123;e&#125;^&#123;-2 x_&#123;1&#125;&#125;+\\mathrm&#123;e&#125;^&#123;-x_&#123;2&#125;&#125;-2 x_&#123;3&#125;+t_&#123;k&#125; x_&#123;4&#125;-x_&#123;5&#125;+25.6=0 \\\\ t_&#123;k&#125; x_&#123;1&#125;+3 x_&#123;2&#125;+\\mathrm&#123;e&#125;^&#123;-x_&#123;3&#125;&#125;-3 x_&#123;5&#125;+37.8=0 \\\\ 2 x_&#123;1&#125;+t_&#123;k&#125; x_&#123;2&#125;+x_&#123;3&#125;-\\mathrm&#123;e&#125;^&#123;-x_&#123;4&#125;&#125;+2 \\mathrm&#123;e&#125;^&#123;-2 x_&#123;5&#125;&#125;-31.3=0 \\\\ x_&#123;1&#125;-2 x_&#123;2&#125;-3 t_&#123;k&#125; x_&#123;3&#125;+\\mathrm&#123;e&#125;^&#123;-2 x_&#123;4&#125;&#125;+3 \\mathrm&#123;e&#125;^&#123;-x_&#123;5&#125;&#125;+42.1=0\\end&#123;array&#125;\\right. \\(\\left\\{\\begin{array}{l}\\mathrm{e}^{-x_{1}}+\\mathrm{e}^{-2 x_{2}}+x_{3}-2 x_{4}+t_{k} x_{5}-5.3=0 \\\\ \\mathrm{e}^{-2 x_{1}}+\\mathrm{e}^{-x_{2}}-2 x_{3}+t_{k} x_{4}-x_{5}+25.6=0 \\\\ t_{k} x_{1}+3 x_{2}+\\mathrm{e}^{-x_{3}}-3 x_{5}+37.8=0 \\\\ 2 x_{1}+t_{k} x_{2}+x_{3}-\\mathrm{e}^{-x_{4}}+2 \\mathrm{e}^{-2 x_{5}}-31.3=0 \\\\ x_{1}-2 x_{2}-3 t_{k} x_{3}+\\mathrm{e}^{-2 x_{4}}+3 \\mathrm{e}^{-x_{5}}+42.1=0\\end{array}\\right.\\) 既可以用来表示矩阵，也可以用来表示方程…… 数学表达式 根式 Text1\\sqrt[]&#123;&#125; \\(\\sqrt[n]{x+1}\\) 集合相关 Text12345$\\exists$$\\forall$$\\neg$$\\wedge$$\\vee$ \\(\\exists,\\ \\forall, \\ \\neg, \\ \\wedge,\\ \\vee\\) LaTex中的数学字体 有些字体需要在序言中引入特定的包：\\usepackage&#123;amssymb&#125; 有些字体支持一部分字符： Text123456\\begin&#123;align*&#125;RQSZ \\\\\\mathcal&#123;RQSZ&#125; \\\\\\mathfrak&#123;RQSZ&#125; \\\\\\mathbb&#123;RQSZ&#125;\\end&#123;align*&#125; \\(\\begin{align*} RQSZ \\\\ \\mathcal{RQSZ} \\\\ \\mathfrak{RQSZ} \\\\ \\mathbb{RQSZ} \\end{align*}\\) 手写体，哥特黑体，黑板粗体。 也可以将整个数学表达式的字体更换为另外一种： Text123456789\\begin&#123;align*&#125;3x^2 \\in R \\subset Q \\\\\\mathnormal&#123;3x^2 \\in R \\subset Q&#125; \\\\\\mathrm&#123;3x^2 \\in R \\subset Q&#125; \\\\\\mathit&#123;3x^2 \\in R \\subset Q&#125; \\\\\\mathbf&#123;3x^2 \\in R \\subset Q&#125; \\\\\\mathsf&#123;3x^2 \\in R \\subset Q&#125; \\\\\\mathtt&#123;3x^2 \\in R \\subset Q&#125; \\end&#123;align*&#125; \\(\\begin{align*}3x^2 \\in R \\subset Q \\\\ \\mathnormal{3x^2 \\in R \\subset Q} \\\\ \\mathrm{3x^2 \\in R \\subset Q} \\\\ \\mathit{3x^2 \\in R \\subset Q} \\\\ \\mathbf{3x^2 \\in R \\subset Q} \\\\ \\mathsf{3x^2 \\in R \\subset Q} \\\\ \\mathtt{3x^2 \\in R \\subset Q} \\end{align*}\\)","categories":[{"name":"软件与编程语言学习","slug":"软件与编程语言学习","permalink":"https://shymuel.top/categories/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"论文编辑","slug":"论文编辑","permalink":"https://shymuel.top/tags/%E8%AE%BA%E6%96%87%E7%BC%96%E8%BE%91/"},{"name":"学习和工作","slug":"学习和工作","permalink":"https://shymuel.top/tags/%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%B7%A5%E4%BD%9C/"}]},{"title":"好用软件及网站分享","slug":"好用软件及网站分享","date":"2021-12-15T02:26:20.000Z","updated":"2021-12-15T02:32:26.248Z","comments":true,"path":"2675119176.html","link":"","permalink":"https://shymuel.top/2675119176.html","excerpt":"","text":"文档编辑 WPS，一直开会员，云文档功能yyds。 笔记软件 为知笔记。旧版和X版我都在用，笑死，已经变成为知笔记的形状了，一年60块买不了吃亏买不了上当。我现在写博客都是在为知笔记写完然后导出成Markdown。 论文阅读 单纯看PDF的话WPS也能满足需求，但WPS是不提供文献管理功能的，批注功能也弱了点。今天发现一个叫IvySci的软件，中文名青藤学术，竟然还是个国产软件……well，再用一段时间再来评价，目前用免费版，收费版也不贵，但收费之后的空间确实小了点，看得出小公司没那么有钱……目前最吸引我的功能是软件内用各种引擎查论文，以及一键把论文中的引用文献加入项目。但它现在有个问题是 论文搜索 之前一直用学校的网在SCI上查，最近觉得还是谷歌学术牛牛。但是懒得开科学上网的话，谷粉学术挺好用的，也可以去用镜像。","categories":[{"name":"软件与编程语言学习","slug":"软件与编程语言学习","permalink":"https://shymuel.top/categories/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"软件使用","slug":"软件使用","permalink":"https://shymuel.top/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"},{"name":"学习和工作","slug":"学习和工作","permalink":"https://shymuel.top/tags/%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%B7%A5%E4%BD%9C/"}]},{"title":"强化学习笔记（一） 强化学习概述","slug":"强化学习笔记（一）","date":"2021-09-03T13:37:20.000Z","updated":"2021-09-03T13:47:22.827Z","comments":true,"path":"4072327491.html","link":"","permalink":"https://shymuel.top/4072327491.html","excerpt":"","text":"本系列文章为笔者学习网络上的强化学习教程之后的笔记，在原文和自己理解的基础上重新写作而成，基本可以认为是原文的精简版，后续可能会在阅读其他教材之后在对应章节添加例子等。原教程地址 第一章原文链接 强化学习解决的是一个智能体如何在一个复杂不确定的环境里极大化它能获得的奖励。 在环境（environment）中，智能体（agent）进行各种动作（action）产生某种状态（state），据此环境给出奖励（reward）。这里的奖励是延迟奖励，即行为的进行到奖励的求得之间往往又隔了一些动作。 强化学习的一些特征：有试错探索（trial-and-error exlporation），探索环境来获取对环境的理解；从环境中得到延迟的奖励；每个动作在时间上是连续的；agent的行为会影响之后的数据。 举一个雅达利pong游戏的例子：一块板子往上或者往下，把弹球弹到对面。整个游戏过程是rollout的，即从当前帧可以生成很多局游戏。agent和环境交互会产生很多观测，每个观测是一个轨迹（trajectory）。轨迹是当前帧以及他采取的策略，即状态和动作的一个序列：\\(\\tau =(s_0,a_0,s_1,a_1, \\dots )\\) 一场游戏叫做一个episode或者trial。 最近把强化学习和深度学习结合起来，成为深度强化学习。 几个小项目吧，学走路，穿衣服。一般先在虚拟环境取得不错的效果，然后再上机械臂。 序列决策过程 agent的目的是从观测之中学到能极大化奖励的策略。要进行近期奖励和远期奖励的一个平衡，最终一般希望获得更多的长期奖励。 历史是观测、行为、奖励的序列： Ht = O1, R1, A1,..., At-1,... agent在采取动作的时候依赖于它的历史，可以把整个游戏的状态看成这个历史的函数：St=f(Ht) 状态S是对世界的完整描述，不隐藏信息；观测O是部分描述。deep RL中一般用实值的向量、矩阵或张量来表示状态和观测。 agent的状态和环境的状态等价：完全可观测；MDP问题。在这个问题中， 1O_t=S^e_t=S^a_t 否则就是部分可观测的。这是POMDP问题。部分可观测马尔科夫决策过程。POMDP是一个马尔科夫决策过程的繁华，具有马尔科夫性质，但假设智能体无法感知环境的状态S，只知道部分观测值O。 用一个七元组描述：(S, A, T, R, Ω, O, γ). S是状态空间，隐变量；A是动作空间，T是状态转移概率，R是奖励函数；Ω是观测概率，O为观测空间，γ为折扣系数。 动作空间 有效动作的集合被称为动作空间。离散动作空间，动作数量有限；连续动作空间，动作种类无限，此时动作是实值的向量。 强化学习agent的组成 策略函数policy func：用这个函数来选取下一步的动作； 价值函数value func：对当前状态估价； model：表示agent对这个环境的状态进行的理解，这一点决定这个世界如何运行。 Policy stochastic policy随机性策略：输入一个状态s，输出是一个概率。进一步对概率进行采样，可以得到一个action。 deterministic policy确定性策略：进行一个极大化处理，只进行概率最大的action。 对于Atari游戏，策略函数的输入就是游戏的一帧，他的输出决定往左或者往右。通常采用随机性策略，因为其动作具有多样性。 Value Function 价值函数 未来奖励的一个预测，用来评估状态的好坏。 价值函数里有一个discount factor折扣因子。我们希望在尽可能短的时间里得到尽可能多的奖励。价值函数的定义其实是一个期望，Eπ，这个函数表明我们已知某一个策略函数的时候，到底可以得到多少奖励。 还有一种价值函数叫Q函数，包含两个变量状态和动作。 模型 模型决定了下一个状态会是什么样的。它由两个部分你组成： 概率：状态之间如何转移；奖励函数：当在当前状态进行了某个行为，可以得到多大的奖励。 有了上述三个部分之后，就得到了一个马尔科夫决策过程。这个过程可视化了状态之间的转移以及行为。 例子-走迷宫 要求agent从start开始，走到goal的位置，每走一步会得到-1的奖励。可以采取的动作是往上下左右走。 可以采用不同的强化学习算法来解题： 基于策略的RL，学习完环境之后，每个状态都会得到一个最佳的行为。 基于价值的RL，用价值函数作为导向，可以得到另外一种表征。 types of RL agents 基于价值的agent：显式学习价值函数，隐式学习策略。 基于策略的agent：直接学习策略，没有学习价值函数。 二者结合得到actor-critic agent，策略函数和价值函数都学习，然后通过两者交互得到一个最佳行为。 基于策略迭代和基于价值迭代的强化学习方法有什么区别？ 对一个状态转移概率已知的马尔科夫决策过程，可以用动态规划算法求解。决策方式来看，可以分为基于策略迭代的方法和基于价值迭代的方法。决策方式是静态的，不随状态变化而变化。 基于策略迭代的强化学习中，智能体会制定一套动作策略以确定给定状态下采取何种动作，并根据这个策略操作。有策略梯度算法等。 基于价值迭代的方法则维护一个价值表格或函数。只能应用在不连续、离散的环境下。基于价值迭代的有Q-learning，Sarsa等。 根据有没有学习环境模型分类 model-based有模型：通过学习状态的转移采取动作； model-free无模型：不直接估计状态的转移，也没得到环境的具体转移变量，学习价值和策略函数进行决策。 智能体知道状态转移函数和奖励函数后，智能体就不需要在真实环境中采取动作，直接在虚拟环境下学习即可，这种事有模型学习。无模型就是用实物参与训练的意思。 Learning and Planning 强化学习中，环境初始时是未知的，agent不知道环境如何工作，不断交互后改进策略。 planning是进行学习前对环境的建模。常用的强化学习解决问题思路是：先学习环境如何工作，得到一个模型，然后利用这个模型进行规划。（数学建模的感觉……） 探索和利用 探索是说怎么探索环境，即找到能获得最大奖励的策略。利用是说不去尝试新的东西，仅靠已知就可以得到很大奖励的行为。 K-armed Bandit K-臂赌博机 与监督学习的区别有一点是RL的最终奖赏在多步学习之后才能观察到。 一种简单策略：最大化单步奖励。此时强化学习仍与监督学习不同，因为机器需要通过尝试发现各个动作产生的结果。需要考虑两个方面：知道每个动作带来的奖赏；执行奖赏最大的动作。 问题复杂之处在于，一个动作的奖赏通常来自一个概率分布而非确定值。 单步强化学习对应了K臂赌博机的模型。赌徒投入一个硬币后可选择按下一个摇臂，每个摇臂以一定的概率吐出金币但这个概率赌徒不知道。赌徒的目标是通过一定的策略最大化自己的奖赏。 若想获知每个摇臂的期望奖赏，则可采用仅探索法，将所有机会平均分配给每个摇臂，然后计算期望。 如果只想执行奖赏最大的动作，则可采用仅利用法，按下目前最优的摇臂。若有多个最优则随机选一个。 显然，在探索和利用之间，必须要达成一个较好的折中。 下面是一系列案例和资源网站。 似乎用的比较多的库是GYM。","categories":[{"name":"强化学习","slug":"强化学习","permalink":"https://shymuel.top/categories/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"强化学习","slug":"强化学习","permalink":"https://shymuel.top/tags/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/"},{"name":"算法学习","slug":"算法学习","permalink":"https://shymuel.top/tags/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"}]},{"title":"HEXO建站（二）","slug":"HEXO建站（二）","date":"2021-08-29T08:32:00.000Z","updated":"2021-08-29T08:38:13.473Z","comments":true,"path":"200109796.html","link":"","permalink":"https://shymuel.top/200109796.html","excerpt":"","text":"将网站迁移到新电脑 安装nodejs和git for windows，npm中安装hexo：npm install -g hexo-cli。之后把博客文件夹从旧电脑复制过来即可。 为了上传，还要配置一下新电脑和github仓库之间的联系。这里还是放一个比较好的教程。","categories":[{"name":"软件与编程语言学习","slug":"软件与编程语言学习","permalink":"https://shymuel.top/categories/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"HEXO","slug":"HEXO","permalink":"https://shymuel.top/tags/HEXO/"},{"name":"个人网站","slug":"个人网站","permalink":"https://shymuel.top/tags/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"},{"name":"软件使用","slug":"软件使用","permalink":"https://shymuel.top/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"}]},{"title":"WPS使用技巧记录","slug":"WPS使用","date":"2021-08-14T10:43:49.000Z","updated":"2021-08-14T11:29:28.000Z","comments":true,"path":"3253309366.html","link":"","permalink":"https://shymuel.top/3253309366.html","excerpt":"","text":"公式中插入超过\\(3*3\\)的矩阵 ​ 恕我直言，WPS最新版这个公式属实邪门。用起来没有更方便，甚至都不能自己手动把界面下拉让用户能看到更多的选项…… ​ 今天遇到的问题是WPS自带的公式功能最大插入\\(3*3\\)矩阵，但我需要用到\\(1*7\\)的矩阵。方法是首先插入一个\\(1*3\\)​​的矩阵，然后选中整个矩阵（不包括括号），然后右键——插入——在此前插入列（或者在此后插入列），这样就可以突破原本的\\(3*3\\)的限制了……","categories":[{"name":"软件与编程语言学习","slug":"软件与编程语言学习","permalink":"https://shymuel.top/categories/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"软件使用","slug":"软件使用","permalink":"https://shymuel.top/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"}]},{"title":"游戏王-Overlap歌词（中日语+假名对照版）","slug":"游戏王-Overlap","date":"2021-08-03T07:52:32.000Z","updated":"2021-08-31T16:40:30.676Z","comments":true,"path":"abac2baf.html","link":"","permalink":"https://shymuel.top/abac2baf.html","excerpt":"","text":"本歌日语歌词和中文翻译来源于网易云音乐，假名为博主听译，仅供个人学习与交流之用。 かくせないほどまばゆいひかり せいじゃくやぶりこのよによみがえる 隠 せないほど眩 い光 静 寂 破 りこの世に甦 る 难以隐藏的炫目光芒 划破沉寂 在这世上苏醒 はげしいくゆらぐかわいただいち いのちをかけてひばなぶすけあう はげしいく揺らぐ渇 いた大 地 命 をかけて火花 ぶすけ合う 与剧烈震荡的干涸大地 不惜生命般摩擦出火花 もういちどだけでいい きせきおきてよ もう一 度だけでいい 奇跡 起きてよ 再一次就好 发生奇迹吧 かこになくしたきおくのページをとりもどすちからを 過去になくした記憶 のページを取り戻どすpower を 请给我能夺回过往失去的记忆书页的力量 やみをつらぬくしんじるこころたましいねむるばしょさがして 闇 を贯 ぬく信 じる心 魂 眠る 場所 探がして 坚信能冲破黑暗的心 寻找灵魂长眠之处 まばたきできない するどいがんこうをもやす 瞬 きできない 鋭 い眼 光 を燃やす 眼中燃起让人难以眨眼的锐利光芒 ひかりとかげのふたつのこころ くりすたるにうつるみらいへ 光 と影 の二 つの心 クリスタルに映 る未来 へ 光与暗的两颗心 一同前往水晶中映照的未来 いまうごきだす あかくみなぎるEYES 今 動き 出す 紅 く漲 るEYES 此刻开始行动 那涨红的双眼 たがいのきずをなめあうひびに おわりをつげて しずかにたちあがる 互 いの傷 を舐め合う日々に 终わりを告 て 静 かに立ち上がる 对互相舔舐伤口的时光 宣告终结 静静站起身来 ちいさなあかりともしたよるの きみとかわしたやくそくまもりぬく 小 さな明かり灯した 夜 の 君 と交 した約 束 守 り抜く 那微灯映照之夜 与你结下的约定 我会坚守到底 かすむしんきろうがきみをみせるよ 霞 む蜃 気楼 が君 を见せるよ 模糊的幻象之中 看见了你的身影 すすんださきになにがおきてもまけわしないかくごで 進 んだ先 に何 が掟 も負けわしない覚 悟で 无论前路上发生什么 我都会有绝不认输的觉悟 きせきはおこるしんじるこころ むかえにきたしょうりのめがみが 奇跡 は起こる信 じる心 迎 えに来た勝 利の女神 が 坚信能引发奇迹的心 胜利女神将迎接它的到来 すべてをたおすどんなかべにもひるまない 全 てを倒 すどんな壁 にも怯 まない 打倒一切敌人 不畏惧任何困难 まよいつづけるふたつのこころ いろあせることないせかいへ 迷 い続 ける二 つの心 色 褪せることない世界 へ 仍在迷惘的两颗心 一同前往永不黯淡的世界 いまかがやくよ かさなりあったEYES 今 輝 くよ 重 なりあったEYES 此刻绽放光芒 那重合的双眼 しずむたいようにつきがとけるよ 沈 む太 陽 に月 が溶けるよ 月亮融化在西沉的落日之中 かこになくしたきおくのページをとりもどすちからを 過去になくした記憶 のページを取り戻どすpower を 请给我能夺回过往失去的记忆书页的力量 やみをつらぬくしんじるこころたましいねむるばしょさがして 闇 を贯 ぬく信 じる心 魂 眠る 場所 探がして 坚信能冲破黑暗的心 寻找灵魂长眠之处 まばたきできない するどいがんこうをもやす 瞬 きできない 鋭 い眼 光 を燃やす 眼中燃起让人难以眨眼的锐利光芒 ひかりとかげのふたつのこころ くりすたるにうつるみらいへ 光 と影 の二 つの心 クリスタルに映 る未来 へ 光与暗的两颗心 一同前往水晶中映照的未来 いまうごきだす あかくみなぎるEYES 今 動き 出す 紅 く漲 るEYES 此刻开始行动 那涨红的双眼 かさなりあうEYES 重 なり合うEYES 那重合的双眼","categories":[{"name":"日语学习","slug":"日语学习","permalink":"https://shymuel.top/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"日语","slug":"日语","permalink":"https://shymuel.top/tags/%E6%97%A5%E8%AF%AD/"},{"name":"日文歌","slug":"日文歌","permalink":"https://shymuel.top/tags/%E6%97%A5%E6%96%87%E6%AD%8C/"}]},{"title":"Java基础知识点总结","slug":"Java基础知识点总结","date":"2021-07-11T07:19:34.000Z","updated":"2021-08-03T10:33:30.000Z","comments":true,"path":"79803d5e.html","link":"","permalink":"https://shymuel.top/79803d5e.html","excerpt":"","text":"本文内容均来源于网络，如尚硅谷的免费视频课程、菜鸟教程和优质博客等；本文仅供学习交流使用。 初识Java Java发行版有多个后缀名，通常Java SE 开发桌面级应用；Java EE 开发web应用；Java ME运行在移动端； Java的应用：企业级应用；Android平台开发；大数据平台开发；移动领域应用； Java的特点： 一：面向对象。类，对象；封装，继承，多态； 二：健壮性；三：跨平台性，通过JVM虚拟机实现； 两个核心机制：虚拟机和垃圾回收机制； JDK：Java开发工具包，其中包含了JRE。其中有编译工具javac.exe和打包工具jar.exe。 JRE：Java运行环境，包括虚拟机和Java程序所需核心类库等。想运行一个开发好的Java程序，只安装JRE即可。 JDK的目录：bin，基本程序；db，数据库；include，头文件；lib，jar包；src，常用的类库和源码； 程序员编写.java 源文件，用javac.exe编译为.class 字节码文件，再用Java.exe运行； 编译运行java源文件： 12javac helloworld.java (加后缀)java helloworld （不加后缀） Java严格区分大小写，但是Windows路径不区分大小写； 注释分为单行注释、多行注释和文档注释；文档注释可被编译器编译，生成网页形式的说明文档； 12345/**@author 指定作者@version 指定源文件版本*/javadoc -d myHello -author -version HelloJava.java 一个源文件中可以写多个类，但最多只能有一个类声明为public，并且这个类得和.java文件同名。 编译时每个类单独生成一个class文件。 不知道学了多少遍的基础知识 变量相关 Java中有关键字和保留字。保留字现在还不是关键字但以后可能会是。 自己起的变量名叫标识符，注意不能用数字开头； 命名规范：包名全小写；类名接口名所有单词首字母大写；变量和方法名第一个单词首字母小写，后面开始大写；常量名全大写，单词之间用_连接；变量必须定义在作用域（{}）中； 声明long型变量以l或者L结尾； char中只能有一个字符，可以是转义字符； Unicode底层字符，可以是如同'123'的字符；保存文件的时候用ANSI编码时，cmd可以输出中文； 类型之间的关系 byte、char、short同级，运算之后必须赋值给int类型的变量；强制类型转换时截断或者变成最小值； byte b+1编译不通过，因为默认常数是int型，小数是double型； string可以和boolean类型做运算，结果为后面连接一个true或者false； 进行赋值时，八进制用0开头，二进制0b开头，十六进制0x开头； 运算符 运算符分为算术、赋值、比较、逻辑、位运算、三元运算符； 取余运算的结果符号与被模数的符号相同。 自增1不会改变本身数据的类型（针对int，byte等类型）；Java支持连续赋值； +=不会改变变量本身的数据类型。 12345short s1 = 10;s1 += 2; // 可通过编译；int n = 10;n += (n++) + (++n); // 32 比较运算符结果都是Boolean型； instanceof()：检查是否是类的对象； &amp;&amp; 短路与；|| 短路或；^ 逻辑异或。短路运算符按顺序运行，如果左侧的表达式已知其值是true或者false，则右侧的表达式不会进行计算； 逻辑运算符只能适用于布尔类型变量； 位运算：直接对整数的二进制进行运算。&gt;&gt;&gt; 无符号右移（不管被移动数字是正还是负，最高位都用0补齐）；~取反运算； 使用位运算符交换两个变量的值： 123num1 = num1 ^ num2;num2 = num1 ^ num2;num1 = num1 ^ num2; 单目运算符、三元运算符、赋值运算符都是从右向左计算；这导致a?b:c?d:e 等价于 a?b:(c?d:e) 而不是 (a?b:c)?d:e Java程序在控制台进行交互 从键盘获取不同类型变量：使用Scanner类； 1234567import java.util.Scanner;Scanner scan = new Scanner(System.in);int num = scan.nextInt();string: scan.next();scan.nextDouble();scan.nextBoolean(); char型没有单独的输入方式，可以用读取字符串的方式读入，再从中取出某一位： 1234567Math.sqrt(i);String s = readKeyBoard(i); // 从键盘读入一个长度i的字符串s.tpUpperCase(); // 变成大写s.charAt(i); // 可以取出某个位置的字符(int)(Math.random()*90+10); // random产生0到1的随机数 switch后面的表达式类型可以是：byte，short，char，int，枚举类型，string 123456int[] x，y[]; // x是一维数组，y是二维数组；// 此时x代表一个对象（Java和C不同）y[0] = x; // yesarray2 = array1; // 即可完成数组的复制，注意这个时候array2和array1指向同一个位置，改array2，array1也会改变// 正确的数组复制需要new一个数组，逐个赋值 Java的string可以很长。 数组 数组的元素可以是基本或者引用数据类型；数组长度定好之后不能修改！ 123456//静态初始化int[] ids;ids = new in[]&#123;1,2,3&#125;;ids = &#123;1,2,3&#125;;//动态初始化String[] names = new String[4]; 数组元素是引用数据类型则默认值是null； arrays工具类的使用： 12345boolean equals(int[] a, int[] b); //判断两个数组是否相等String toString(int[] a); //输出数组信息void fill(int[] a, int val); //指定值填充到数组中void sort(int[] a); //排序int binarySearch(int[] a, int key); //对排序后的数组进行二分法检索指定的值 数组如果没有赋值会报空指针错误，null； 新建变量的存储位置 栈中：存放局部变量；堆中：new出来的对象和数组； string：常量池中；static类型的变量：保存在静态域中； 12String[][] arr2 = new String[3][2];String[][] arr3 = new String[3][]; Java面向对象 Java类及类的成员包含的“内容”：属性，方法，构造器； 其中有些特殊的成员：代码块，内部类 面向对象的三大特性：封装，继承，多态。有些人还命名的其他特性如抽象性。 类和对象 类的成员：属性（成员变量），行为（方法函数）。 属性直接定义在类的{}里，局部变量在方法等的内部； 局部变量不能加修饰符（除了final）。非static属性是类的每个对象都有一套。 小tips：alt+左箭头可以快速到函数定义位置或返回 如果要使用对象的方法，哪怕是在对象内部使用也要new一个对象； 四舍五入取整：Math.round(double d)；非对象语言和Java交互的时候依然表现为对象； 引用数据类型在使用的时候其变量名都是代表地址值； 匿名对象的使用（每次都重新创建一个对象）： 12new phone().sendEmail();mall.show(mew phone()); 函数的值传递机制： 参数是基本数据类型，实参赋给形参的是他储存的真实数据值； 参数是引用数据类型，形参得到的是变量所保存的数据的地址值。 1println(char[] x); //直接输出了char数组 重载 重载两同一不同：同一个类，相同方法名；参数列表不同：参数个数或者类型不同； 返回值相同或者不同都可以构成重载； 可变个数形参的方法：public void show(String ... strs)；即“数据类型 ... 数据名”的形式；参数数量可以是0个。 需要注意可变个数形参的方法与把数组作为参数的方法不构成重载； 可变个数形参必须放在最后；重载的函数中最多声明一个可变个数形参； 类的封装和隐藏 把类的属性声明成private，则类外不能直接调用属性；只能通过方法如setlegs，getlegs. 封装性的体现需要权限修饰符来配合：private，缺省，protected，public（从小到大）。 属性体现封装性，类也可以体现封装性； 修饰符 类内部 同一个包 不同包的子类 同一个工程 private yes default yes yes protected yes yes yes public yes yes yes yes 有四种权限修饰符可以修饰类和类的内部结构。class的权限只可以用public和default； 不同的包可以定义重名类。 构造器：功能是创建对象，实际使用中和类同名。不显式定义则默认提供一个空参的构造器。构造器严格来说不是方法，可以重载。 属性赋值的先后顺序：默认，显式初始化，构造器中赋值，调用属性进行赋值。 Javabean：特殊的java类。类是公共的，有一个无参的公共的构造器，有属性，有对应的get，set方法；可重用组件。 默认构造器的权限和其所在的类相同。 在开发过程中，为了清晰的显示类和类之间的关系，可以使用UML类图。 this和import的使用 方法内部用，则表示对该方法对象的引用；构造器内部使用，表示构造器正在初始化的对象； this表示当前对象，可以修饰方法，属性； 类的方法中可以使用this.属性或this.方法，构造器中也可以this修饰方法和属性； this调用构造器：this(args)，主要是为了减少构造器中的冗余代码；自始至终对象只有一个；this(args)必须声明在当前构造器首行，构造器内部最多只能调用一个其他构造器； ALT+SHITF+S 调出代码生成器 package：更好的管理类，声明类或者接口属于的包，放在首行； MVC设计模式：M模型处理数据，V视图显示数据，C控制处理业务逻辑； import：在源文件中使用import导入指定包下的类和接口；声明在包和类的声明之间；import xxx.*导入其下所有内容，但是不包含其中的子包； import static：导入类或接口中的静态结构，同时import static的结尾一定是.* 持续更新ing","categories":[{"name":"软件与编程语言学习","slug":"软件与编程语言学习","permalink":"https://shymuel.top/categories/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://shymuel.top/tags/Java/"},{"name":"编程语言","slug":"编程语言","permalink":"https://shymuel.top/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"}]},{"title":"HEXO和GitHub建站（一）","slug":"HEXO建站（一）","date":"2021-07-11T04:56:11.000Z","updated":"2021-08-14T11:30:30.000Z","comments":true,"path":"b077d8cb.html","link":"","permalink":"https://shymuel.top/b077d8cb.html","excerpt":"","text":"环境搭建 首先安装node.js，直接官网下载安装。接着安装git for windows，直接官网安装（访问官网及后续安装搞个梯子会方便很多）。安装之后用下述语句查看版本以确认安装成功。 123git versionnode -vnpm -v 新建一个文件夹用于存放博客相关的环境和内容配置，例如\"blog\"。在该文件夹中右击，选择\"Git bash here\"。安装HEXO： 123npm install hexo -g #安装Hexonpm update hexo -g #升级，可不进行hexo init #初始化博客 HEXO的常用指令如下（这些指令均要在上面创建的blog文件夹路径下运行）： 1234567891011hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; # 新建文章hexo g == hexo generate # 生成hexo s == hexo server # 启动服务预览（安装hexo之后直接就可以进行）hexo d == hexo deploy # 部署到GitHub（需要预先与GitHub进行连接）# 上面的几条语句，使用的时候输入&quot;==&quot;前面的部分就可以了。hexo server # Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s # 静态模式hexo server -p 5000 # 更改端口hexo server -i 192.168.1.1 # 自定义 IPhexo clean # 清除缓存，若是网页正常情况下可以忽略这条命令 这样就可以在本地预览网站效果。为了能在其他设备上访问自己的网站，我选择GitHub托管自己的数据。 具体的操作是在GitHub上建立仓库，然后配置权限让自己可以把blog的内容直接部署到GitHub上。上传成功之后就可以用仓库的名称来访问博客，如我的是\"shymuel.github.io\"。但github的后缀容易被墙，我的解决方法是自己购买一个域名。国内域名需要实名审核但比较保险，大家可以自行选择合适的域名商。 Volantis主题使用 HEXO使用量最大的主题大概就是NexT了，它的功能十分强大，看起来也比较简洁。 我为了看起来更加的二次元而选择了Volantis主题，主要是为了使用它的定时换背景功能（因为我有太多壁纸想放上去了）。图片目前我还是放在本地，采用相对路径。后面抽空研究一下如何使用CDN实现图片读取。 Volantis自带文章目录功能，可根据md文件中的标题在网页一侧生成目录。 配置背景图、头像之类的需要在blog文件夹下新建名为\"_config.volantis.yml\"的文件进行配置。建议按照主题文档进行。 对于字数统计和阅读时长显示，先要安装wordcount插件： 1npm i --save hexo-wordcount 之后可以通过主题配置文件里的 word_count 关键字来选择是否开启此功能，默认false。在配置文件的enable后面加上true。 Twikoo评论插件 根据官方文档进行配置。我选择的是Vercel部署方式。原开发者做了非常非常详细的视频教程。我把_config.volantis.yml中关于评论的设置改成了如下的样子： 1234567891011121314151617twikoo: js: https://cdn.jsdelivr.net/npm/twikoo@latest # 建议锁定版本 path: # 全局评论地址 # 其他配置项按照yml格式继续填写即可 除了 [el path] 选项 envId: https://twikoo-dusky.vercel.app/ # vercel id appId: # your appId appKey: # your appKey meta: [nick,mail,link] # valine comment header info requiredFields: [nick,mail] enableQQ: true # Unstable avatar link recordIP: false # Record commenter IP avatar: img/avatar.jpg # gravatar style https://valine.js.org/avatar pageSize: 10 # comment list page size lang: zh-cn highlight: true mathJax: false 部署之后还可以根据自己的需求，下载密钥设置管理员密码来对评论系统进行管理和定制。 暗黑模式 按照_config.volantis.yml中的描述，修改navbar目录，在menu子目录中添加： 123- name: 暗黑模式 # 可自定义 icon: fas fa-moon # 可自定义 toggle: darkmode 自动生成文章的唯一永久链接 使用abbrlink生成。首先下载abbrlink。 1npm install hexo-abbrlink --save 之后修改根目录站点配置文件config.yml，改为： 1234url: https://自己的网址名/permalink: :abbrlink.htmlabbrlink: alg: crc32 #算法： crc16(default) and crc32 之后hexo三连即可。 插入LateX公式 更换渲染工具为 hexo-renderer-pandoc： 123npm uninstall hexo-renderer-marked --savenpm install hexo-renderer-pandoc --save 安装 hexo-math 插件以支持 latex 公式： 1npm install hexo-math --save volantis主题的话，在_config.volantis.yml中把mathjax后面改成true即可。注意要clean之后重新生成，latax公式才能正常显示。 记得要在有公式的博客开头加上： 1mathjax: true","categories":[{"name":"软件与编程语言学习","slug":"软件与编程语言学习","permalink":"https://shymuel.top/categories/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"HEXO","slug":"HEXO","permalink":"https://shymuel.top/tags/HEXO/"},{"name":"个人网站","slug":"个人网站","permalink":"https://shymuel.top/tags/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"},{"name":"软件使用","slug":"软件使用","permalink":"https://shymuel.top/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"}]},{"title":"新的开始","slug":"新的开始","date":"2021-06-26T12:44:43.000Z","updated":"2021-08-03T10:37:16.000Z","comments":true,"path":"b585e161.html","link":"","permalink":"https://shymuel.top/b585e161.html","excerpt":"","text":"最后还是回来写代码了……感觉传统工科的老师都在搞机器学习，那我也没有办法，只能重新回来刷题。 这个博客上的内容可能会写的支离破碎一些，毕竟现在都在做各种项目，也不可能把全部的代码放上来，大概只是记录一下自己能做到什么功能吧，核心代码也会放一些。","categories":[{"name":"日志","slug":"日志","permalink":"https://shymuel.top/categories/%E6%97%A5%E5%BF%97/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://shymuel.top/tags/%E9%9A%8F%E7%AC%94/"}]}],"categories":[{"name":"软件与编程语言学习","slug":"软件与编程语言学习","permalink":"https://shymuel.top/categories/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"},{"name":"强化学习","slug":"强化学习","permalink":"https://shymuel.top/categories/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/"},{"name":"日语学习","slug":"日语学习","permalink":"https://shymuel.top/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"},{"name":"日志","slug":"日志","permalink":"https://shymuel.top/categories/%E6%97%A5%E5%BF%97/"}],"tags":[{"name":"论文编辑","slug":"论文编辑","permalink":"https://shymuel.top/tags/%E8%AE%BA%E6%96%87%E7%BC%96%E8%BE%91/"},{"name":"学习和工作","slug":"学习和工作","permalink":"https://shymuel.top/tags/%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%B7%A5%E4%BD%9C/"},{"name":"软件使用","slug":"软件使用","permalink":"https://shymuel.top/tags/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/"},{"name":"强化学习","slug":"强化学习","permalink":"https://shymuel.top/tags/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/"},{"name":"算法学习","slug":"算法学习","permalink":"https://shymuel.top/tags/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"},{"name":"HEXO","slug":"HEXO","permalink":"https://shymuel.top/tags/HEXO/"},{"name":"个人网站","slug":"个人网站","permalink":"https://shymuel.top/tags/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"},{"name":"日语","slug":"日语","permalink":"https://shymuel.top/tags/%E6%97%A5%E8%AF%AD/"},{"name":"日文歌","slug":"日文歌","permalink":"https://shymuel.top/tags/%E6%97%A5%E6%96%87%E6%AD%8C/"},{"name":"Java","slug":"Java","permalink":"https://shymuel.top/tags/Java/"},{"name":"编程语言","slug":"编程语言","permalink":"https://shymuel.top/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"},{"name":"随笔","slug":"随笔","permalink":"https://shymuel.top/tags/%E9%9A%8F%E7%AC%94/"}]}